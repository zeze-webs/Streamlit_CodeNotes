[
  {
    "title": "Definisi code di streamlit (PART 2)",
    "category": "Phyton",
    "content": "1. st.set_page_config\nFungsi ini digunakan untuk mengatur tampilan dasar halaman Streamlit. Kita bisa menentukan judul tab di browser, layout halaman (misalnya centered atau wide), dan ikon favicon. Biasanya diletakkan di bagian paling atas script agar pengaturan halaman sudah ditentukan sebelum halaman tampil.\n\n2. st.title\nDigunakan untuk menampilkan judul utama pada halaman. Tampilannya akan besar dan mencolok, biasanya digunakan untuk menyambut pengguna atau memberikan informasi judul dari aplikasi web.\n\n3. st.markdown\nFungsi ini digunakan untuk menampilkan teks dengan format markdown. Markdown adalah sistem penulisan ringan yang bisa menghasilkan teks bergaya seperti tebal, miring, daftar poin, link, atau heading. Fungsi ini cocok dipakai untuk membuat deskripsi yang rapi dan kaya format.\n\n4. st.subheader\nFungsinya mirip seperti st.title, tetapi tampilannya lebih kecil. Biasanya digunakan untuk menandai subbagian dari suatu halaman atau kelompok informasi tertentu, agar struktur tampilan lebih teratur.\n\n5. with st.form\nDigunakan untuk membuat sebuah form input. Form ini memungkinkan pengguna untuk mengisi beberapa input terlebih dahulu, lalu menekan satu tombol submit di akhir untuk mengirim semua input sekaligus. Ini membuat interaksi dengan pengguna menjadi lebih teratur dan tidak satu per satu.\n\n6. st.success\nFungsi ini digunakan untuk menampilkan pesan bahwa suatu proses telah berhasil dilakukan. Pesan akan muncul dalam warna hijau dan biasanya digunakan sebagai konfirmasi setelah pengguna menyimpan data, mengisi form, atau menyelesaikan suatu langkah.\n\n7. with st.expander\nDigunakan untuk membuat bagian konten yang bisa dibuka atau ditutup oleh pengguna. Sangat cocok digunakan jika ingin menyembunyikan informasi tambahan, panduan, atau catatan agar halaman tidak terlihat penuh sejak awal. Saat pengguna mengklik judul expander, isi di dalamnya akan terbuka.\n\n8. st.write\nMerupakan fungsi serbaguna yang bisa digunakan untuk menampilkan hampir semua jenis data, seperti teks, angka, list, dictionary, tabel, grafik, dan bahkan objek Python lainnya. Streamlit akan secara otomatis menyesuaikan tampilan berdasarkan tipe data yang diberikan.\n\n9. st.rerun()\nDigunakan untuk menjalankan ulang aplikasi dari awal. Fungsi ini berguna ketika kita ingin menyegarkan isi halaman setelah ada aksi yang mengubah data, misalnya setelah menambahkan catatan atau menghapus item tertentu. Dengan st.rerun, halaman akan otomatis memuat ulang script dari atas.\n\n",
    "date": "2025-07-05"
  },
  {
    "title": "Definisi code di streamlit (PART 1)",
    "category": "Phyton",
    "content": "1. import\n\nKeyword ini digunakan untuk memanggil atau mengaktifkan library atau modul eksternal ke dalam script Python kamu.\nLibrary ini bisa bawaan dari Python (seperti math, json, datetime) atau bisa juga hasil instalasi (seperti streamlit, numpy, pandas).\n\nTujuannya: supaya kamu bisa menggunakan fungsi-fungsi dan fitur-fitur dari library tersebut.\nMisalnya: kalau kamu import math, maka kamu bisa pakai math.sqrt() untuk menghitung akar kuadrat.\n\n2. from ... import ...\n\nBaris ini juga digunakan untuk memanggil library, tapi lebih spesifik.\nBedanya dengan import biasa adalah kamu hanya mengambil bagian tertentu dari sebuah library.\n\nContoh: from datetime import datetime artinya kamu hanya ambil bagian datetime dari modul datetime, bukan semuanya.\n\nTujuannya: supaya lebih ringkas saat dipakai, karena kamu gak perlu nulis awalan nama modul.\n\n3. Path (dari pathlib)\n\nPath adalah bagian dari modul pathlib, digunakan untuk mengelola file dan direktori dalam Python.\nBerfungsi untuk memudahkan penulisan path file tanpa harus menggunakan tanda garis miring atau format OS tertentu.\n\nDengan Path, kamu bisa menulis Path(\"data.json\") dan bisa langsung digunakan untuk cek file, buat file baru, atau membaca file dengan cara yang lebih rapi dan modern.\n\n4. def\n\nKata def adalah singkatan dari \"define\", dan digunakan untuk membuat fungsi baru dalam Python.\nFungsi adalah blok kode yang bisa dipanggil berulang kali untuk menjalankan tugas tertentu.\n\nTujuannya: supaya kode kamu lebih rapi, efisien, dan tidak berulang-ulang.\n\nContoh umum:\nKalau kamu sering perlu menghitung luas segitiga, kamu bisa bikin fungsi def luas_segitiga(a, t): lalu panggil kapan pun kamu butuh, tanpa tulis ulang rumusnya.\n\n5. if ...:\n\nKata if digunakan untuk membuat percabangan logika dalam program.\nDengan if, kamu bisa bilang \u201ckalau kondisi ini benar, maka lakukan sesuatu\u201d.\n\nTujuannya: supaya program kamu bisa berpikir secara logis dan fleksibel terhadap situasi tertentu.\n\nContoh:\n\nif nilai >= 75: print(\"Lulus\")\nArtinya: hanya cetak \"Lulus\" kalau nilai-nya lebih besar atau sama dengan 75.\n\n6. return\n\nreturn digunakan di dalam fungsi untuk mengembalikan hasil dari proses dalam fungsi tersebut ke tempat pemanggilnya.\nJadi, saat kamu panggil fungsi, kamu bisa dapat nilai balik yang bisa dipakai lagi.\n\nContohnya:\nKalau kamu punya fungsi def tambah(a, b): return a + b,\nLalu kamu tulis hasil = tambah(3, 4), maka variabel hasil akan bernilai 7.\n\n7. with open(...) as ...\n\nIni adalah cara aman untuk membuka file di Python.\nBlok ini akan otomatis menutup file setelah selesai digunakan, jadi kamu tidak perlu menutup file secara manual.\n\nopen() bisa digunakan untuk:\n\nMembaca file (\"r\" mode read)\n\nMenulis file (\"w\" mode write)\n\nMenambahkan isi ke file (\"a\" mode append)\n\n8. json.load() dan json.dump()\n\njson.load() dipakai untuk membaca file JSON dan mengubahnya jadi data Python (biasanya jadi dictionary atau list).\n\njson.dump() dipakai untuk menulis data Python ke file dan mengubahnya jadi format JSON.\n\nJSON ini penting karena sering dipakai sebagai format pertukaran data dalam aplikasi dan web.\n\nKesimpulan singkat fungsi umum:\n\nimport = memanggil seluruh library\n\nfrom ... import ... = memanggil bagian tertentu dari library\n\nPath() = objek representasi file/direktori\n\ndef = membuat fungsi\n\nif = logika percabangan\n\nreturn = hasil dari fungsi\n\nwith open(...) = buka file dengan aman\n\njson.load() = baca isi JSON\n\njson.dump() = simpan data jadi JSON",
    "date": "2025-07-05"
  },
  {
    "title": "Streamlit",
    "category": "Phyton",
    "content": "Streamlit adalah sebuah library Python yang digunakan untuk membuat aplikasi web interaktif secara cepat dan mudah. Library ini dirancang khusus untuk para data scientist, machine learning engineer, dan developer yang ingin menyajikan data atau model AI ke dalam bentuk antarmuka web tanpa harus belajar HTML, CSS, atau JavaScript.\n\nStreamlit bekerja dengan cara mengubah script Python biasa menjadi sebuah web app yang dapat dijalankan langsung di browser. Kamu cukup menulis kode Python seperti biasa, lalu menggunakan fungsi-fungsi dari Streamlit untuk menambahkan elemen seperti teks, tombol, grafik, input form, tabel, gambar, dan banyak lagi.\n\nSalah satu keunggulan Streamlit adalah kemudahan penggunaannya. Untuk membuat web app sederhana, kamu cukup menuliskan beberapa baris kode, lalu menjalankan perintah streamlit run di terminal. Setelah itu, web app kamu akan langsung muncul di browser, biasanya di localhost.\n\nStreamlit sangat cocok digunakan untuk membuat:\n\nDashboard data interaktif\n\nForm sederhana untuk menginput data\n\nDemo model machine learning\n\nVisualisasi data dinamis\n\nAplikasi presentasi data\n\nStreamlit memiliki berbagai fungsi bawaan yang sangat intuitif, misalnya st.title untuk menampilkan judul, st.write untuk menampilkan teks atau hasil, st.button untuk membuat tombol, st.text_input untuk membuat kolom input, dan st.line_chart atau st.bar_chart untuk membuat grafik.\n\nAplikasi yang dibangun dengan Streamlit hanya butuh satu file Python saja, tanpa harus membuat file HTML atau CSS terpisah. Tapi jika diinginkan, kamu tetap bisa menggabungkan dengan file eksternal atau bahkan menggunakan HTML di dalamnya dengan aman.\n\nStreamlit juga mendukung update otomatis. Artinya, jika kamu menyimpan perubahan di file Python-mu, web app akan langsung refresh dengan sendirinya. Hal ini sangat memudahkan proses pengembangan aplikasi.\n\nSelain digunakan secara lokal, aplikasi Streamlit juga bisa di-host secara online menggunakan platform seperti Streamlit Cloud, atau bisa di-deploy ke layanan cloud lain seperti Heroku, AWS, atau GCP.\n\nKesimpulannya, Streamlit adalah solusi ideal bagi siapa pun yang ingin membuat aplikasi web dari Python dengan cepat, khususnya untuk visualisasi data dan interaksi sederhana. Tidak perlu belajar frontend development, cukup kuasai Python dan logika aplikasinya.",
    "date": "2025-07-05"
  },
  {
    "title": "JSON",
    "category": "Lainnya",
    "content": "JSON adalah singkatan dari JavaScript Object Notation. JSON adalah format yang digunakan untuk menyimpan dan menukar data secara ringkas dan mudah dibaca, baik oleh manusia maupun komputer.\n\nFungsi utama JSON adalah sebagai media pertukaran data antar sistem, khususnya dalam komunikasi antara aplikasi frontend (seperti tampilan web) dan backend (seperti server). Format ini sangat umum digunakan dalam pemrograman web dan API.\n\nJSON terdiri dari pasangan kunci dan nilai. Kunci biasanya berupa teks, dan nilainya bisa berupa teks, angka, boolean (true atau false), array (daftar), atau objek lain. Secara struktur, JSON sangat mirip dengan dictionary di Python atau object di JavaScript.\n\nSebagai contoh, data informasi seseorang dalam format JSON akan terlihat seperti ini (secara konsep): ada bagian nama yang berisi \"Nabil\", umur yang berisi angka, dan hobi yang berisi daftar.\n\nJSON bersifat ringan dan fleksibel. Itulah mengapa JSON sangat populer dibanding format data lain seperti XML. JSON juga mudah diproses oleh berbagai bahasa pemrograman seperti Python, JavaScript, PHP, dan banyak lainnya.\n\nDalam praktiknya, JSON biasanya digunakan untuk hal-hal seperti:\n\nMenyimpan data konfigurasi\n\nMenyimpan dan membaca data dari file\n\nMengirim dan menerima data lewat API\n\nMenghubungkan frontend dan backend dalam aplikasi web\n\nMisalnya, ketika kamu mengisi formulir login, data username dan password bisa dikirim ke server dalam format JSON. Setelah itu, server bisa membalas juga dalam format JSON untuk memberi tahu apakah login berhasil atau tidak.\n\nDi Python sendiri, kamu bisa membaca file JSON dan mengubahnya menjadi dictionary Python menggunakan modul bawaan bernama json. Begitu juga sebaliknya, kamu bisa mengambil data dari Python lalu menyimpannya sebagai file JSON.\n\nKesimpulannya, JSON adalah format data yang sangat penting dalam pemrograman modern karena:\n\nRingkas dan mudah dibaca\n\nMudah diproses oleh banyak bahasa\n\nIdeal untuk komunikasi data antar sistem, terutama lewat API\n\nKalau kamu sudah paham JSON, kamu bakal lebih lancar saat belajar AP",
    "date": "2025-07-05"
  },
  {
    "title": " API",
    "category": "Lainnya",
    "content": "API: API adalah singkatan dari Application Programming Interface. Dalam dunia teknologi, API berfungsi sebagai jembatan atau penghubung antara dua aplikasi atau sistem yang berbeda agar bisa saling berkomunikasi dan bertukar data.\n\nSecara sederhana, API memungkinkan satu aplikasi meminta data atau layanan dari aplikasi lain tanpa harus tahu bagaimana sistem dalamannya bekerja. Misalnya, saat kamu membuka aplikasi cuaca di HP, aplikasi itu mengambil data dari server lain (seperti BMKG atau OpenWeather) melalui API. Kamu tidak perlu tahu bagaimana server itu bekerja, kamu hanya menerima datanya lewat API.\n\nAPI biasanya bekerja dengan prinsip request dan response. Artinya, satu aplikasi akan mengirimkan permintaan (request) kepada API, dan API akan mengembalikan data atau hasil (response). Pertukaran datanya hampir selalu menggunakan format JSON, karena JSON mudah dibaca oleh mesin maupun manusia.\n\nContohnya, kalau kamu ingin membuat aplikasi yang menampilkan informasi film, kamu bisa menggunakan API dari situs seperti TMDB (The Movie Database). Aplikasi kamu akan mengirim permintaan ke API TMDB, lalu TMDB akan mengirimkan data film seperti judul, poster, rating, dan sinopsis.\n\nAPI juga mengatur batasan akses dan keamanan. Beberapa API bersifat publik, tapi banyak juga yang membutuhkan kunci khusus yang disebut API key agar tidak disalahgunakan.\n\nSelain digunakan untuk mengambil data, API juga bisa digunakan untuk mengirim data. Contohnya, saat kamu mengisi formulir login atau mengirim komentar di media sosial, datanya dikirim ke server melalui API.\n\nAPI digunakan hampir di semua aplikasi modern. Aplikasi belanja online, transportasi, media sosial, perbankan, hingga game semuanya menggunakan API untuk menghubungkan satu sistem dengan sistem lainnya.\n\nSecara teknis, di Python API bisa diakses dengan library seperti requests. Sedangkan di JavaScript biasanya digunakan fetch atau axios. Tapi kamu tidak perlu menguasai semuanya sekaligus. Cukup pahami dulu bahwa API itu adalah pintu masuk dan keluar data antar aplikasi.\n\nKesimpulannya, API adalah cara sistem yang berbeda berbicara dan bertukar informasi, tanpa perlu tahu bagaimana bagian dalam masing-masing sistem itu bekerja. API membantu kita mengakses data dari luar, mengirim data ke server, atau mengintegrasikan aplikasi kita dengan layanan yang lebih besar.\n\n",
    "date": "2025-07-05"
  },
  {
    "title": "HTML ",
    "category": "Lainnya",
    "content": "\ud83d\udca1 Struktur Dasar Halaman Web\nSebuah halaman web HTML dimulai dengan deklarasi jenis dokumen (HTML5), lalu dilanjutkan dengan elemen utama <html> yang mencakup dua bagian: head dan body.\n\n\ud83e\udde0 Bagian HEAD (Informasi tentang halaman)\nMeta charset UTF-8: Mengatur agar karakter seperti huruf asing, emoji, atau simbol bisa tampil dengan benar.\n\nMeta viewport: Supaya tampilan halaman responsif alias cocok di berbagai ukuran layar seperti HP, tablet, atau laptop.\n\nTitle halaman: Judul yang muncul di tab browser, bisa diisi sesuka hati.\n\nLink Bootstrap: Menghubungkan halaman ke pustaka desain eksternal (Bootstrap), biar elemen HTML seperti tombol dan form jadi lebih stylish otomatis.\n\nLink Google Fonts: Menambahkan font khusus dari Google, misalnya font Quicksand untuk bikin tampilan teks lebih cantik dan friendly.\n\nStyle internal (CSS):\n\nMengatur background halaman dengan gradasi warna (misal ungu ke pink).\n\nMengatur tinggi halaman biar penuh se-layar.\n\nMenetapkan jenis font utama halaman (misalnya Quicksand).\n\n\ud83d\udcab Bagian BODY (Isi halaman yang terlihat)\n1. Gambar Hiasan\nDua gambar diposisikan di kiri bawah dan kanan bawah layar secara tetap (absolut).\n\nGambar berfungsi sebagai dekorasi dan diatur ukurannya.\n\n2. Judul Halaman\nTeks judul besar diletakkan di tengah halaman.\n\nGaya tulisan pakai font cursive, diberi ukuran besar, warna teks hitam, dan efek bayangan warna pink.\n\n3. Form Login\nDibungkus dalam kontainer yang diposisikan di tengah layar (baik secara vertikal maupun horizontal).\n\nDi dalamnya ada card (kotak) berisi:\n\nJudul form yang menarik, misalnya \u201cLogin Yuk \ud83d\ude18\u201d\n\nInput untuk username\n\nInput untuk password\n\nTombol untuk mengirim form\n\n\ud83d\udd10 Proses Validasi Login (JavaScript)\nDisiapkan data user dalam bentuk array, berisi objek-objek yang punya username dan password.\n\nSaat tombol submit ditekan, JavaScript akan mencegah halaman reload otomatis.\n\nData yang dimasukkan user akan diambil dan dibersihkan dari spasi tidak penting.\n\nJavaScript akan mencocokkan input dengan data user yang tersedia.\n\nJika cocok, pengguna diarahkan ke halaman berikutnya (misal: memory.html).\n\nJika tidak cocok, muncul notifikasi gagal login.\n\n\ud83d\uded1 Catatan penting: Ada kesalahan umum di bagian ini. ID form di HTML dan ID yang dipanggil di JavaScript harus persis sama (huruf besar dan kecil sensitif).\n\n\ud83e\uddf3 Halaman Memory Vault (Setelah Login)\nJudul halaman ditampilkan dengan font cursive, warna putih, dan diletakkan di tengah atas halaman.\n\nAda tombol berlabel \u201cUnlock Memory\u201d untuk membuka kenangan acak.\n\nDi bawahnya, ada kotak untuk menampilkan hasil kenangan (berupa teks atau gambar) secara acak.\n\nDaftar kenangan disimpan dalam bentuk array JavaScript. Setiap kali tombol ditekan, akan dipilih satu elemen secara random dari array ini.\n\n\ud83c\udfa8 Tampilan Memory Vault (CSS)\nKotak memory memiliki latar transparan, bayangan halus, sudut membulat, dan animasi transisi biar tampilan lebih smooth.\n\nTombolnya didesain dengan warna pink lembut, bentuk lonjong, teks tebal, dan bayangan lucu. Saat di-hover, warnanya berubah lebih terang dan kursor berubah bentuk.",
    "date": "2025-07-02"
  }
]